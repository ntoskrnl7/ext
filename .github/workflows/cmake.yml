name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    defaults:
      run:
        working-directory: test

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Make build directory
      run: mkdir build && cd build
      working-directory: test

    - name: Configure CMake
      run: cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      working-directory: test/build
      
    - name: Build
      if: ${{ matrix.os != 'windows-latest' }}
      run: cmake --build . --config ${{env.BUILD_TYPE}}
      working-directory: test/build

    - name: Test
      if: ${{ matrix.os != 'windows-latest' }}
      working-directory: ${{github.workspace}}/test/build
      run: ctest -C ${{env.BUILD_TYPE}} --verbose

    - name: Build (MultiByte)
      if: ${{ matrix.os == 'windows-latest' }}
      run: cmake --build . --config ${{env.BUILD_TYPE}} -- /p:CharacterSet=MultiByte
      working-directory: test/build

    - name: Test (MultiByte)
      if: ${{ matrix.os == 'windows-latest' }}
      working-directory: ${{github.workspace}}/test/build
      run: ctest -C ${{env.BUILD_TYPE}} --verbose

    - name: Build (Unicode)
      if: ${{ matrix.os == 'windows-latest' }}
      run: cmake --build . --config ${{env.BUILD_TYPE}} -- /p:CharacterSet=Unicode
      working-directory: test/build

    - name: Test (Unicode)
      if: ${{ matrix.os == 'windows-latest' }}
      working-directory: ${{github.workspace}}/test/build
      run: ctest -C ${{env.BUILD_TYPE}} --verbose
